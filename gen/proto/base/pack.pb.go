// Code generated by protoc-gen-go.
// source: base/pack.proto
// DO NOT EDIT!

/*
Package proto_base is a generated protocol buffer package.

It is generated from these files:
	base/pack.proto

It has these top-level messages:
	Error
	Pack
*/
package proto_base

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Error struct {
	Failed           *bool   `protobuf:"varint,1,opt,name=failed" json:"failed,omitempty"`
	Code             *int32  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Error            *string `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}

func (m *Error) GetFailed() bool {
	if m != nil && m.Failed != nil {
		return *m.Failed
	}
	return false
}

func (m *Error) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *Error) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

type Pack struct {
	Session          *int32 `protobuf:"varint,1,opt,name=session" json:"session,omitempty"`
	Type             *int32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Error            *Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	Data             []byte `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Pack) Reset()         { *m = Pack{} }
func (m *Pack) String() string { return proto.CompactTextString(m) }
func (*Pack) ProtoMessage()    {}

func (m *Pack) GetSession() int32 {
	if m != nil && m.Session != nil {
		return *m.Session
	}
	return 0
}

func (m *Pack) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Pack) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Pack) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
}
